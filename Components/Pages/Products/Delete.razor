@page "/products/delete/{id:int}"
@inject ApplicationDbContext Context
@inject NavigationManager Navigation
@rendermode InteractiveServer

<h3>Excluir Produto</h3>
<br />

@if (ProductModel is null) {
    <p class="text-center">
        <em>Produto não encontrado!</em>
    </p>
} else {
    <h3>@ProductModel.Name (@ProductModel.Id)</h3>
}

<EditForm Model="@ProductModel" OnValidSubmit="OnSubmit">

    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label class="form-label">Nome:</label>
        <InputText @bind-Value="ProductModel!.Name" class="form-control" readonly />
    </div>

    <div class="mb-3">
        <label class="form-label">Preço:</label>
        <InputNumber @bind-Value="ProductModel.Price" class="form-control" readonly />
    </div>

    <button type="submit" class="btn btn-danger">Excluir</button>
    <a href="/products">Produtos</a>
</EditForm>

@code {

    [Parameter]
    public int Id { get; set; }
    public Product ProductModel { get; set; } = new();

    protected override async Task OnInitializedAsync() {

        //await Task.Delay(2000);
        ProductModel = await Context.Products.AsNoTracking().
        FirstAsync(c => c.Id == Id);
    }

    public async Task OnSubmit() {
        Context.Products.Remove(ProductModel);
        await Context.SaveChangesAsync();
        Navigation.NavigateTo("products");
    }
}
